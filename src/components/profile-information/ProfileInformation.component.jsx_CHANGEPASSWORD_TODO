import React, { useState } from "react";

import { CustomButton, FormWrapper } from "./ProfileInformation.styles";
import { Form, Modal, Button } from "react-bootstrap";
import { getAdminList, getStudentList } from "../../util/api/api";

const ProfileInformation = ({isAdminProfile}) => {
    // const [showModal, setShowModal] = useState(false);
    // const [oldPassword, setOldPassword] = useState("");
    // const [newPassword, setNewPassword] = useState("");
    // const [repeatNewPassword, setRepeatNewPassword] = useState("");
    // const [confirmationMessage, setConfirmationMessage] = useState("");

      const profileList = getAdminList();
      const profileInformation = profileList[0];
      const {
        adminId,
        first_name,
        last_name,
        email,
        phone,
        date_of_birth,
        username,
        current_password,
      } = profileInformation;

      const profileList = getStudentList()
      const profileInformation = profileList[0];
      const {
        adminId,
        first_name,
        last_name,
        email,
        phone,
        date_of_birth,
        username,
        current_password,
      } = profileInformation;
  
  

  // const handlePasswordChange = () => {

  //   if (oldPassword === profileInformation.current_password) {
  //       console.log('first validation');
  //     if (newPassword === repeatNewPassword) {
  //       console.log('second validation');
  //       // Perform the password change logic here.
  //       // You can send an API request to update the password.
  //       // After successfully changing the password, you can set the confirmation message and show the confirmation modal.
  //       // For now, I'll assume you set the confirmation message as follows:
  //       setConfirmationMessage("Password has been changed successfully.");
  //     } else {
  //       setConfirmationMessage("New passwords do not match.");
  //     }
  //   } else {
  //     setConfirmationMessage("Old password is incorrect.");
  //   }
  //   setShowModal(true);
  // };

  // const handleClose = () => {
  //   setShowModal(false);
  // };

  return (
    <>
      <FormWrapper noValidate>
        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>First Name:</strong>
          </Form.Label>
          <Form.Control value={first_name} disabled />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>Last Name:</strong>
          </Form.Label>
          <Form.Control value={last_name} disabled />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>Email:</strong>
          </Form.Label>
          <Form.Control value={email} disabled />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>Phone:</strong>
          </Form.Label>
          <Form.Control value={phone} disabled />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>Date of Birth:</strong>
          </Form.Label>
          <Form.Control value={date_of_birth} disabled />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>Username:</strong>
          </Form.Label>
          <Form.Control value={username} disabled />
        </Form.Group>

        <Form.Group className="mb-3">
          <Form.Label style={{ color: "var(--color_font2)" }}>
            <strong>Password:</strong>
          </Form.Label>
          <Form.Control type="password" value={current_password} disabled />
        </Form.Group>

      {/* <CustomButton onClick={() => setShowModal(true)}>Change Password</CustomButton> */}
      </FormWrapper>


      {/* <Modal show={showModal} onHide={handleClose}>
        <Modal.Header closeButton>
          <Modal.Title>Change Password</Modal.Title>
        </Modal.Header>
        <Modal.Body>
        {confirmationMessage && <p>{confirmationMessage}</p>}
          <Form.Group>
            <Form.Label>Old Password:</Form.Label>
            <Form.Control
              type="password"
              placeholder="Enter old password"
              value={oldPassword}
              onChange={(e) => setOldPassword(e.target.value)}
              required
            />
          </Form.Group>

          <Form.Group className="mt-3">
            <Form.Label>New Password:</Form.Label>
            <Form.Control
              type="password"
              placeholder="Enter new password"
              value={newPassword}
              onChange={(e) => setNewPassword(e.target.value)}
              required
            />
          </Form.Group>

          <Form.Group className="mt-3">
            <Form.Label>Repeat New Password:</Form.Label>
            <Form.Control
              type="password"
              placeholder="Repeat new password"
              value={repeatNewPassword}
              onChange={(e) => setRepeatNewPassword(e.target.value)}
              required
            />
          </Form.Group>
        </Modal.Body>
        <Modal.Footer>
          <Button onClick={handlePasswordChange}>Save Password</Button>
          <Button onClick={handleClose}>Cancel</Button>
        </Modal.Footer>
      </Modal> */}
    </>
  );
};

export default ProfileInformation;
